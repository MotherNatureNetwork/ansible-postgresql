---

- name: install required SSL certs
  apt: name={{ item }}
  with_items:
    - apt-transport-https
    - ca-certificates

- name: Get PostgreSQL apt repo key.
  apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc
           id=ACCC4CF8
           state=present

- name: Add PostgreSQL apt repo.
  apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ {{ postgresql_distro_version }}-pgdg main'
                  state=present

- name: Update Apt
  apt: update_cache=yes

- name: Install PostgreSQL.
  apt: name={{ item }}
  with_items:
    - postgresql-{{ postgresql_version }}
    - postgresql-server-dev-{{ postgresql_version }}
    - python-dev
    - python-psycopg2

- name: Make sure db is running.
  service: name=postgresql state=started enabled=yes
  when: ansible_distribution_release == 'trusty'

- name: Start and Enable Postgresql service
  systemd: name=postgresql state=started enabled=yes
  when: ansible_distribution_release == 'xenial'

- name: Create database
  become_user: postgres
  postgresql_db: name={{ postgresql_database }}
                 state=present
                 login_unix_socket='/var/run/postgresql'
  register: postgres_db
  when: postgresql_database is defined

- name: Create db user
  become_user: postgres
  postgresql_user: name={{ postgresql_user }}
                   password={{ postgresql_password }}
                   role_attr_flags={{ postgresql_user_attrs | join(",") }}
                   login_unix_socket='/var/run/postgresql'
  when: postgresql_user is defined

- name: Restore DB
  become_user: postgres
  command: pg_restore -d {{ postgresql_database }} {{ postgresql_dump }}
  when: postgres_db.changed == true and postgresql_dump is defined
